
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftORleftANDleftEQNEleftGTLTGELEleftSUBSUMleftMULDIVMODleftNOTleftLRBRRBLCBRCBLSBRSBleftIFleftELSEELSEIFAND ASSIGN BOOLEAN COLON COMMA DIV ELSE ELSEIF EQ ERROR FALSE FLOAT FLOATNUMBER FOR FUNCTION GE GT ID IF IN INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MOD MUL NE NOT ON OPERATOR OR PRINT RCB RETURN RRB RSB SEMICOLON SUB SUM TRUE WHERE WHILEprogram : declist MAIN LRB RRB blockprogram : MAIN LRB RRB blockdeclist : decdeclist : declist decdec : vardecdec : funcdectype : INTEGERtype : FLOATtype : BOOLEANiddec : IDiddec : ID LSB exp RSBiddec : ID ASSIGN expidlist : iddecidlist : idlist COMMA iddecvardec : idlist COLON type SEMICOLONfuncdec : FUNCTION ID LRB paramdecs RRB COLON type blockfuncdec : FUNCTION ID LRB RRB COLON type blockfuncdec : FUNCTION ID LRB paramdecs RRB blockfuncdec : FUNCTION ID LRB RRB blockparamdecs : paramdecslistparamdecslist : paramdecparamdecslist : paramdecslist COMMA paramdecparamdec : ID COLON typeparamdec : ID LSB RSB COLON typeblock : LCB stmtlist RCBblock : LCB RCBstmtlist : stmtstmtlist : stmtlist stmtcase : WHERE const COLON stmtlistcase : WHERE const COLON cases : casecases : cases casestmt : RETURN exp SEMICOLONstmt : exp SEMICOLONstmt : blockstmt : vardecstmt : WHILE LRB exp RRB stmtstmt : ON LRB exp RRB LCB cases RCB SEMICOLONstmt : ON LRB exp RRB LCB RCB SEMICOLONstmt : FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmtstmt : FOR LRB ID IN ID RRB stmtstmt : IF LRB exp RRB stmt elseifliststmt : IF LRB exp RRB stmt stmt : IF LRB exp RRB stmt elseiflist ELSE stmtstmt : IF LRB exp RRB stmt ELSE stmtstmt : PRINT LRB ID RRB SEMICOLONelseiflist : ELSEIF LRB exp RRB stmtelseiflist : elseiflist ELSEIF LRB exp RRB stmtrelopexp : exp GT exprelopexp : exp LT exprelopexp : exp NE exprelopexp : exp EQ exprelopexp : exp GE exprelopexp : exp LE expotherop : exp AND expotherop : exp OR expotherop : exp SUM expotherop : exp SUB expotherop : exp MUL expotherop : exp DIV expotherop : exp MOD expexp : ID ASSIGN expexp : ID LSB exp RSB ASSIGN expexp : relopexpexp : otheropexp : constexp : IDexp : ID LSB exp RSBexp : ID LRB explist RRBexp : LRB exp RRBexp : ID LRB RRBexp : SUB expexp : NOT expconst : INTEGERNUMBERconst : FLOATNUMBERconst : TRUEconst : FALSEexplist : expexplist : explist COMMA exp'
    
_lr_action_items = {'MAIN':([0,2,4,5,6,12,43,71,87,108,122,139,150,],[3,11,-3,-5,-6,-4,-15,-26,-19,-25,-18,-17,-16,]),'FUNCTION':([0,2,4,5,6,12,43,71,87,108,122,139,150,],[8,8,-3,-5,-6,-4,-15,-26,-19,-25,-18,-17,-16,]),'ID':([0,2,4,5,6,8,12,15,17,18,26,32,33,34,42,43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,73,75,76,87,88,108,109,111,112,113,114,115,116,117,118,122,127,128,139,140,142,144,145,147,150,152,156,157,162,163,164,165,169,172,173,175,176,177,178,179,180,181,183,184,186,187,188,189,],[9,9,-3,-5,-6,16,-4,9,27,27,44,27,27,27,80,-15,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,80,-26,-27,27,-35,-36,-19,44,-25,-28,-34,27,27,132,27,27,27,136,-18,27,-33,-17,27,80,27,155,80,-16,-37,-43,-46,27,80,-42,80,-39,-41,80,-45,27,-38,80,80,-44,27,80,-40,80,80,-47,-48,]),'$end':([1,41,69,71,108,],[0,-2,-1,-26,-25,]),'LRB':([3,11,16,17,18,27,32,33,34,42,43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,73,75,76,77,78,79,80,81,82,108,109,111,112,113,114,115,116,117,127,128,132,140,142,144,147,152,156,157,162,163,164,165,166,169,172,173,174,175,176,177,178,179,180,181,183,184,186,187,188,189,],[13,19,26,32,32,51,32,32,32,32,-15,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-26,-27,32,-35,-36,112,113,114,51,117,118,-25,-28,-34,32,32,32,32,32,32,32,-33,51,32,32,32,32,-37,-43,-46,32,32,-42,32,176,-39,-41,32,181,-45,32,-38,32,32,-44,32,32,-40,32,32,-47,-48,]),'COLON':([7,9,10,25,27,29,30,31,35,36,37,38,39,44,46,52,67,68,80,85,89,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,120,125,126,133,146,151,170,],[14,-10,-13,-14,-67,-64,-65,-66,-74,-75,-76,-77,-12,83,86,-11,-72,-73,-10,121,-62,-71,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-70,137,-68,-69,-12,-11,-63,178,]),'COMMA':([7,9,10,22,23,24,25,27,29,30,31,35,36,37,38,39,47,48,52,67,68,80,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,119,124,125,126,133,141,146,149,151,],[15,-10,-13,-7,-8,-9,-14,-67,-64,-65,-66,-74,-75,-76,-77,-12,88,-21,-11,-72,-73,-10,-62,127,-71,-78,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-70,-23,-22,-68,-69,-12,-79,-11,-24,-63,]),'LSB':([9,27,44,80,132,],[17,50,84,116,50,]),'ASSIGN':([9,27,80,125,132,146,],[18,49,115,140,49,140,]),'RRB':([13,19,22,23,24,26,27,29,30,31,35,36,37,38,45,47,48,51,66,67,68,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,119,124,125,126,129,130,135,136,141,149,151,155,171,182,185,],[20,40,-7,-8,-9,46,-67,-64,-65,-66,-74,-75,-76,-77,85,-20,-21,92,107,-72,-73,-62,126,-71,-78,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-70,-23,-22,-68,-69,142,143,147,148,-79,-24,-63,163,179,186,187,]),'INTEGER':([14,83,86,121,137,],[22,22,22,22,22,]),'FLOAT':([14,83,86,121,137,],[23,23,23,23,23,]),'BOOLEAN':([14,83,86,121,137,],[24,24,24,24,24,]),'SUB':([17,18,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,125,126,127,128,129,130,131,132,133,134,135,140,141,142,144,146,147,151,152,154,156,157,162,163,164,165,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,],[33,33,-67,62,-64,-65,-66,33,33,33,-74,-75,-76,-77,62,33,-15,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,62,-72,-73,33,-26,-27,33,62,-35,-36,-67,62,62,-71,62,62,62,62,62,62,62,62,62,-57,-58,-59,-60,-61,-70,-25,-28,62,-34,33,33,33,33,33,33,-68,-69,33,-33,62,62,62,-67,62,62,62,33,62,33,33,-68,33,62,-37,62,-43,-46,33,33,-42,33,-39,62,-41,33,-45,33,-38,33,33,-44,33,62,33,-40,62,33,33,-47,-48,]),'NOT':([17,18,32,33,34,42,43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,73,75,76,108,109,111,112,113,114,115,116,117,127,128,140,142,144,147,152,156,157,162,163,164,165,169,172,173,175,176,177,178,179,180,181,183,184,186,187,188,189,],[34,34,34,34,34,34,-15,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-26,-27,34,-35,-36,-25,-28,-34,34,34,34,34,34,34,34,-33,34,34,34,34,-37,-43,-46,34,34,-42,34,-39,-41,34,-45,34,-38,34,34,-44,34,34,-40,34,34,-47,-48,]),'INTEGERNUMBER':([17,18,32,33,34,42,43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,73,75,76,108,109,111,112,113,114,115,116,117,127,128,140,142,144,147,152,156,157,161,162,163,164,165,169,172,173,175,176,177,178,179,180,181,183,184,186,187,188,189,],[35,35,35,35,35,35,-15,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-26,-27,35,-35,-36,-25,-28,-34,35,35,35,35,35,35,35,-33,35,35,35,35,-37,-43,-46,35,35,35,-42,35,-39,-41,35,-45,35,-38,35,35,-44,35,35,-40,35,35,-47,-48,]),'FLOATNUMBER':([17,18,32,33,34,42,43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,73,75,76,108,109,111,112,113,114,115,116,117,127,128,140,142,144,147,152,156,157,161,162,163,164,165,169,172,173,175,176,177,178,179,180,181,183,184,186,187,188,189,],[36,36,36,36,36,36,-15,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-26,-27,36,-35,-36,-25,-28,-34,36,36,36,36,36,36,36,-33,36,36,36,36,-37,-43,-46,36,36,36,-42,36,-39,-41,36,-45,36,-38,36,36,-44,36,36,-40,36,36,-47,-48,]),'TRUE':([17,18,32,33,34,42,43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,73,75,76,108,109,111,112,113,114,115,116,117,127,128,140,142,144,147,152,156,157,161,162,163,164,165,169,172,173,175,176,177,178,179,180,181,183,184,186,187,188,189,],[37,37,37,37,37,37,-15,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-26,-27,37,-35,-36,-25,-28,-34,37,37,37,37,37,37,37,-33,37,37,37,37,-37,-43,-46,37,37,37,-42,37,-39,-41,37,-45,37,-38,37,37,-44,37,37,-40,37,37,-47,-48,]),'FALSE':([17,18,32,33,34,42,43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,73,75,76,108,109,111,112,113,114,115,116,117,127,128,140,142,144,147,152,156,157,161,162,163,164,165,169,172,173,175,176,177,178,179,180,181,183,184,186,187,188,189,],[38,38,38,38,38,38,-15,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-26,-27,38,-35,-36,-25,-28,-34,38,38,38,38,38,38,38,-33,38,38,38,38,-37,-43,-46,38,38,38,-42,38,-39,-41,38,-45,38,-38,38,38,-44,38,38,-40,38,38,-47,-48,]),'LCB':([20,22,23,24,40,42,43,46,70,71,72,75,76,85,108,109,111,123,128,138,142,143,147,152,156,157,163,164,165,169,172,173,175,177,178,179,180,183,184,186,187,188,189,],[42,-7,-8,-9,42,42,-15,42,42,-26,-27,-35,-36,42,-25,-28,-34,42,-33,42,42,153,42,-37,-43,-46,42,-42,42,-39,-41,42,-45,-38,42,42,-44,42,-40,42,42,-47,-48,]),'SEMICOLON':([21,22,23,24,27,29,30,31,35,36,37,38,67,68,74,80,89,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,131,132,133,146,148,151,154,159,167,],[43,-7,-8,-9,-67,-64,-65,-66,-74,-75,-76,-77,-72,-73,111,-67,-62,-71,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-70,128,-68,-69,144,-67,-62,-68,157,-63,162,169,177,]),'RSB':([27,28,29,30,31,35,36,37,38,67,68,84,89,90,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,125,126,134,151,],[-67,52,-64,-65,-66,-74,-75,-76,-77,-72,-73,120,-62,125,-71,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-70,-68,-69,146,-63,]),'GT':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,53,-64,-65,-66,-74,-75,-76,-77,53,53,-72,-73,53,-67,53,53,-71,53,-49,-50,53,53,-53,-54,53,53,-57,-58,-59,-60,-61,-70,53,-68,-69,53,53,53,-67,53,53,53,53,-68,53,53,53,53,53,]),'LT':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,54,-64,-65,-66,-74,-75,-76,-77,54,54,-72,-73,54,-67,54,54,-71,54,-49,-50,54,54,-53,-54,54,54,-57,-58,-59,-60,-61,-70,54,-68,-69,54,54,54,-67,54,54,54,54,-68,54,54,54,54,54,]),'NE':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,55,-64,-65,-66,-74,-75,-76,-77,55,55,-72,-73,55,-67,55,55,-71,55,-49,-50,-51,-52,-53,-54,55,55,-57,-58,-59,-60,-61,-70,55,-68,-69,55,55,55,-67,55,55,55,55,-68,55,55,55,55,55,]),'EQ':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,56,-64,-65,-66,-74,-75,-76,-77,56,56,-72,-73,56,-67,56,56,-71,56,-49,-50,-51,-52,-53,-54,56,56,-57,-58,-59,-60,-61,-70,56,-68,-69,56,56,56,-67,56,56,56,56,-68,56,56,56,56,56,]),'GE':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,57,-64,-65,-66,-74,-75,-76,-77,57,57,-72,-73,57,-67,57,57,-71,57,-49,-50,57,57,-53,-54,57,57,-57,-58,-59,-60,-61,-70,57,-68,-69,57,57,57,-67,57,57,57,57,-68,57,57,57,57,57,]),'LE':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,58,-64,-65,-66,-74,-75,-76,-77,58,58,-72,-73,58,-67,58,58,-71,58,-49,-50,58,58,-53,-54,58,58,-57,-58,-59,-60,-61,-70,58,-68,-69,58,58,58,-67,58,58,58,58,-68,58,58,58,58,58,]),'AND':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,59,-64,-65,-66,-74,-75,-76,-77,59,59,-72,-73,59,-67,59,59,-71,59,-49,-50,-51,-52,-53,-54,-55,59,-57,-58,-59,-60,-61,-70,59,-68,-69,59,59,59,-67,59,59,59,59,-68,59,59,59,59,59,]),'OR':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,60,-64,-65,-66,-74,-75,-76,-77,60,60,-72,-73,60,-67,60,60,-71,60,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-70,60,-68,-69,60,60,60,-67,60,60,60,60,-68,60,60,60,60,60,]),'SUM':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,61,-64,-65,-66,-74,-75,-76,-77,61,61,-72,-73,61,-67,61,61,-71,61,61,61,61,61,61,61,61,61,-57,-58,-59,-60,-61,-70,61,-68,-69,61,61,61,-67,61,61,61,61,-68,61,61,61,61,61,]),'MUL':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,63,-64,-65,-66,-74,-75,-76,-77,63,63,63,-73,63,-67,63,63,-71,63,63,63,63,63,63,63,63,63,63,63,-59,-60,-61,-70,63,-68,-69,63,63,63,-67,63,63,63,63,-68,63,63,63,63,63,]),'DIV':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,64,-64,-65,-66,-74,-75,-76,-77,64,64,64,-73,64,-67,64,64,-71,64,64,64,64,64,64,64,64,64,64,64,-59,-60,-61,-70,64,-68,-69,64,64,64,-67,64,64,64,64,-68,64,64,64,64,64,]),'MOD':([27,28,29,30,31,35,36,37,38,39,66,67,68,74,80,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,125,126,129,130,131,132,133,134,135,141,146,151,154,171,182,185,],[-67,65,-64,-65,-66,-74,-75,-76,-77,65,65,65,-73,65,-67,65,65,-71,65,65,65,65,65,65,65,65,65,65,65,-59,-60,-61,-70,65,-68,-69,65,65,65,-67,65,65,65,65,-68,65,65,65,65,65,]),'RCB':([42,43,70,71,72,75,76,108,109,111,128,152,153,156,157,158,160,164,168,169,172,175,177,178,180,183,184,188,189,],[71,-15,108,-26,-27,-35,-36,-25,-28,-34,-33,-37,159,-43,-46,167,-31,-42,-32,-39,-41,-45,-38,-30,-44,-29,-40,-47,-48,]),'RETURN':([42,43,70,71,72,75,76,108,109,111,128,142,147,152,156,157,163,164,165,169,172,173,175,177,178,179,180,183,184,186,187,188,189,],[73,-15,73,-26,-27,-35,-36,-25,-28,-34,-33,73,73,-37,-43,-46,73,-42,73,-39,-41,73,-45,-38,73,73,-44,73,-40,73,73,-47,-48,]),'WHILE':([42,43,70,71,72,75,76,108,109,111,128,142,147,152,156,157,163,164,165,169,172,173,175,177,178,179,180,183,184,186,187,188,189,],[77,-15,77,-26,-27,-35,-36,-25,-28,-34,-33,77,77,-37,-43,-46,77,-42,77,-39,-41,77,-45,-38,77,77,-44,77,-40,77,77,-47,-48,]),'ON':([42,43,70,71,72,75,76,108,109,111,128,142,147,152,156,157,163,164,165,169,172,173,175,177,178,179,180,183,184,186,187,188,189,],[78,-15,78,-26,-27,-35,-36,-25,-28,-34,-33,78,78,-37,-43,-46,78,-42,78,-39,-41,78,-45,-38,78,78,-44,78,-40,78,78,-47,-48,]),'FOR':([42,43,70,71,72,75,76,108,109,111,128,142,147,152,156,157,163,164,165,169,172,173,175,177,178,179,180,183,184,186,187,188,189,],[79,-15,79,-26,-27,-35,-36,-25,-28,-34,-33,79,79,-37,-43,-46,79,-42,79,-39,-41,79,-45,-38,79,79,-44,79,-40,79,79,-47,-48,]),'IF':([42,43,70,71,72,75,76,108,109,111,128,142,147,152,156,157,163,164,165,169,172,173,175,177,178,179,180,183,184,186,187,188,189,],[81,-15,81,-26,-27,-35,-36,-25,-28,-34,-33,81,81,-37,-43,-46,81,-42,81,-39,-41,81,-45,-38,81,81,-44,81,-40,81,81,-47,-48,]),'PRINT':([42,43,70,71,72,75,76,108,109,111,128,142,147,152,156,157,163,164,165,169,172,173,175,177,178,179,180,183,184,186,187,188,189,],[82,-15,82,-26,-27,-35,-36,-25,-28,-34,-33,82,82,-37,-43,-46,82,-42,82,-39,-41,82,-45,-38,82,82,-44,82,-40,82,82,-47,-48,]),'ELSE':([43,71,75,76,108,111,128,152,156,157,164,169,172,175,177,180,184,188,189,],[-15,-26,-35,-36,-25,-34,-33,-37,165,-46,173,-39,-41,-45,-38,-44,-40,-47,-48,]),'ELSEIF':([43,71,75,76,108,111,128,152,156,157,164,169,172,175,177,180,184,188,189,],[-15,-26,-35,-36,-25,-34,-33,-37,166,-46,174,-39,-41,-45,-38,-44,-40,-47,-48,]),'WHERE':([43,71,72,75,76,108,109,111,128,152,153,156,157,158,160,164,168,169,172,175,177,178,180,183,184,188,189,],[-15,-26,-27,-35,-36,-25,-28,-34,-33,-37,161,-43,-46,161,-31,-42,-32,-39,-41,-45,-38,-30,-44,-29,-40,-47,-48,]),'IN':([132,],[145,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'dec':([0,2,],[4,12,]),'vardec':([0,2,42,70,142,147,163,165,173,178,179,183,186,187,],[5,5,76,76,76,76,76,76,76,76,76,76,76,76,]),'funcdec':([0,2,],[6,6,]),'idlist':([0,2,42,70,142,147,163,165,173,178,179,183,186,187,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'iddec':([0,2,15,42,70,142,147,163,165,173,178,179,183,186,187,],[10,10,25,10,10,10,10,10,10,10,10,10,10,10,10,]),'type':([14,83,86,121,137,],[21,119,123,138,149,]),'exp':([17,18,32,33,34,42,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,112,113,114,115,116,117,127,140,142,144,147,162,163,165,173,176,178,179,181,183,186,187,],[28,39,66,67,68,74,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,74,110,129,130,131,133,134,135,141,151,74,154,74,171,74,74,74,182,74,74,185,74,74,74,]),'relopexp':([17,18,32,33,34,42,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,112,113,114,115,116,117,127,140,142,144,147,162,163,165,173,176,178,179,181,183,186,187,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'otherop':([17,18,32,33,34,42,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,112,113,114,115,116,117,127,140,142,144,147,162,163,165,173,176,178,179,181,183,186,187,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'const':([17,18,32,33,34,42,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,70,73,112,113,114,115,116,117,127,140,142,144,147,161,162,163,165,173,176,178,179,181,183,186,187,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,170,31,31,31,31,31,31,31,31,31,31,31,]),'block':([20,40,42,46,70,85,123,138,142,147,163,165,173,178,179,183,186,187,],[41,69,75,87,75,122,139,150,75,75,75,75,75,75,75,75,75,75,]),'paramdecs':([26,],[45,]),'paramdecslist':([26,],[47,]),'paramdec':([26,88,],[48,124,]),'stmtlist':([42,178,],[70,183,]),'stmt':([42,70,142,147,163,165,173,178,179,183,186,187,],[72,109,152,156,172,175,180,72,184,109,188,189,]),'explist':([51,],[91,]),'cases':([153,],[158,]),'case':([153,158,],[160,168,]),'elseiflist':([156,],[164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist MAIN LRB RRB block','program',5,'p_program_declist','parser_file.py',13),
  ('program -> MAIN LRB RRB block','program',4,'p_program_main','parser_file.py',17),
  ('declist -> dec','declist',1,'p_declist_dec','parser_file.py',22),
  ('declist -> declist dec','declist',2,'p_declist_declist','parser_file.py',26),
  ('dec -> vardec','dec',1,'p_dec_vardec','parser_file.py',31),
  ('dec -> funcdec','dec',1,'p_dec_funcdec','parser_file.py',35),
  ('type -> INTEGER','type',1,'p_type_int','parser_file.py',40),
  ('type -> FLOAT','type',1,'p_type_float','parser_file.py',44),
  ('type -> BOOLEAN','type',1,'p_type_bool','parser_file.py',48),
  ('iddec -> ID','iddec',1,'p_iddec_id1','parser_file.py',53),
  ('iddec -> ID LSB exp RSB','iddec',4,'p_iddec_id2','parser_file.py',57),
  ('iddec -> ID ASSIGN exp','iddec',3,'p_iddec_id3','parser_file.py',61),
  ('idlist -> iddec','idlist',1,'p_idlist_iddec','parser_file.py',66),
  ('idlist -> idlist COMMA iddec','idlist',3,'p_idlist_idlist','parser_file.py',70),
  ('vardec -> idlist COLON type SEMICOLON','vardec',4,'p_vardec_idlist','parser_file.py',75),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block','funcdec',8,'p_funcdec_fun1_1','parser_file.py',80),
  ('funcdec -> FUNCTION ID LRB RRB COLON type block','funcdec',7,'p_funcdec_fun1_2','parser_file.py',84),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB block','funcdec',6,'p_funcdec_fun2_1','parser_file.py',88),
  ('funcdec -> FUNCTION ID LRB RRB block','funcdec',5,'p_funcdec_fun2_2','parser_file.py',92),
  ('paramdecs -> paramdecslist','paramdecs',1,'p_paramdecs_paramdecslist','parser_file.py',97),
  ('paramdecslist -> paramdec','paramdecslist',1,'p_paramdecslist_paramdec','parser_file.py',102),
  ('paramdecslist -> paramdecslist COMMA paramdec','paramdecslist',3,'p_paramdecslist_paramdecslist','parser_file.py',106),
  ('paramdec -> ID COLON type','paramdec',3,'p_paramdec_id1','parser_file.py',111),
  ('paramdec -> ID LSB RSB COLON type','paramdec',5,'p_paramdec_id2','parser_file.py',115),
  ('block -> LCB stmtlist RCB','block',3,'p_block_stmtlist','parser_file.py',120),
  ('block -> LCB RCB','block',2,'p_block_null','parser_file.py',124),
  ('stmtlist -> stmt','stmtlist',1,'p_stmtlist_stmt','parser_file.py',129),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist_stmlist','parser_file.py',133),
  ('case -> WHERE const COLON stmtlist','case',4,'p_case_where_1','parser_file.py',138),
  ('case -> WHERE const COLON','case',3,'p_case_where_2','parser_file.py',142),
  ('cases -> case','cases',1,'p_cases_case','parser_file.py',147),
  ('cases -> cases case','cases',2,'p_cases_cases','parser_file.py',151),
  ('stmt -> RETURN exp SEMICOLON','stmt',3,'p_stmt_return','parser_file.py',156),
  ('stmt -> exp SEMICOLON','stmt',2,'p_stmt_exp','parser_file.py',160),
  ('stmt -> block','stmt',1,'p_stmt_block','parser_file.py',164),
  ('stmt -> vardec','stmt',1,'p_stmt_vardec','parser_file.py',168),
  ('stmt -> WHILE LRB exp RRB stmt','stmt',5,'p_stmt_while','parser_file.py',172),
  ('stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON','stmt',8,'p_stmt_on_1','parser_file.py',176),
  ('stmt -> ON LRB exp RRB LCB RCB SEMICOLON','stmt',7,'p_stmt_on_2','parser_file.py',180),
  ('stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt','stmt',9,'p_stmt_for1','parser_file.py',184),
  ('stmt -> FOR LRB ID IN ID RRB stmt','stmt',7,'p_stmt_for2','parser_file.py',188),
  ('stmt -> IF LRB exp RRB stmt elseiflist','stmt',6,'p_stmt_if1_1','parser_file.py',192),
  ('stmt -> IF LRB exp RRB stmt','stmt',5,'p_stmt_if1_2','parser_file.py',196),
  ('stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt','stmt',8,'p_stmt_if2_1','parser_file.py',200),
  ('stmt -> IF LRB exp RRB stmt ELSE stmt','stmt',7,'p_stmt_if2_2','parser_file.py',204),
  ('stmt -> PRINT LRB ID RRB SEMICOLON','stmt',5,'p_stmt_print','parser_file.py',208),
  ('elseiflist -> ELSEIF LRB exp RRB stmt','elseiflist',5,'p_elseiflist_elseif','parser_file.py',213),
  ('elseiflist -> elseiflist ELSEIF LRB exp RRB stmt','elseiflist',6,'p_elseiflist_elseiflist','parser_file.py',217),
  ('relopexp -> exp GT exp','relopexp',3,'p_relopexp_1','parser_file.py',222),
  ('relopexp -> exp LT exp','relopexp',3,'p_relopexp_2','parser_file.py',226),
  ('relopexp -> exp NE exp','relopexp',3,'p_relopexp_3','parser_file.py',230),
  ('relopexp -> exp EQ exp','relopexp',3,'p_relopexp_4','parser_file.py',234),
  ('relopexp -> exp GE exp','relopexp',3,'p_relopexp_5','parser_file.py',238),
  ('relopexp -> exp LE exp','relopexp',3,'p_relopexp_6','parser_file.py',242),
  ('otherop -> exp AND exp','otherop',3,'p_otherop_1','parser_file.py',247),
  ('otherop -> exp OR exp','otherop',3,'p_otherop_2','parser_file.py',251),
  ('otherop -> exp SUM exp','otherop',3,'p_otherop_3','parser_file.py',255),
  ('otherop -> exp SUB exp','otherop',3,'p_otherop_4','parser_file.py',259),
  ('otherop -> exp MUL exp','otherop',3,'p_otherop_5','parser_file.py',263),
  ('otherop -> exp DIV exp','otherop',3,'p_otherop_6','parser_file.py',267),
  ('otherop -> exp MOD exp','otherop',3,'p_otherop_7','parser_file.py',271),
  ('exp -> ID ASSIGN exp','exp',3,'p_exp_nlvalue1','parser_file.py',275),
  ('exp -> ID LSB exp RSB ASSIGN exp','exp',6,'p_exp_nlvalue2','parser_file.py',279),
  ('exp -> relopexp','exp',1,'p_exp_exp1','parser_file.py',283),
  ('exp -> otherop','exp',1,'p_exp_relopexp','parser_file.py',287),
  ('exp -> const','exp',1,'p_exp_const','parser_file.py',291),
  ('exp -> ID','exp',1,'p_exp_nlvalue3','parser_file.py',295),
  ('exp -> ID LSB exp RSB','exp',4,'p_exp_nlvalue4','parser_file.py',299),
  ('exp -> ID LRB explist RRB','exp',4,'p_exp_id1','parser_file.py',303),
  ('exp -> LRB exp RRB','exp',3,'p_exp_exp2','parser_file.py',307),
  ('exp -> ID LRB RRB','exp',3,'p_exp_id2','parser_file.py',311),
  ('exp -> SUB exp','exp',2,'p_exp_exp3','parser_file.py',315),
  ('exp -> NOT exp','exp',2,'p_exp_exp4','parser_file.py',319),
  ('const -> INTEGERNUMBER','const',1,'p_const_intnumber','parser_file.py',324),
  ('const -> FLOATNUMBER','const',1,'p_const_floatnumber','parser_file.py',328),
  ('const -> TRUE','const',1,'p_const_True','parser_file.py',332),
  ('const -> FALSE','const',1,'p_const_False','parser_file.py',336),
  ('explist -> exp','explist',1,'p_explist_exp','parser_file.py',341),
  ('explist -> explist COMMA exp','explist',3,'p_explist_explist','parser_file.py',345),
]
